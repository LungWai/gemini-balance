version: "3.9"

volumes:
  mysql_data:

networks:
  internal:                # single private bridge
    driver: bridge

services:
  gemini-balance:
    image: ghcr.io/snailyp/gemini-balance:latest
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file: .env
    # Ensure the app sees the DB at the stable service name
    environment:
      MYSQL_HOST: mysql
    depends_on:
      mysql:
        condition: service_healthy
    healthcheck:
      test: >
        CMD-SHELL python -c "import requests, sys; 
        sys.exit(0) if requests.get('http://localhost:8000/health').status_code == 200 else sys.exit(1)"
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    networks:
      - internal            # <-- on the same network as MySQL

  mysql:
    image: mysql:8
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    networks:
      internal:
        # Optional: old name still resolves, but does **not** pin the container
        aliases:
          - gemini-balance-mysql
